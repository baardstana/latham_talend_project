package routines;

import java.util.Date;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class CustomStringHandling {

    /**
     * replaceNullAndBlank: returns "Unknown" if the string is either null or the trimmed string = ""
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("str") input: The string to be handled.
     * 
     * {example} replaceNullAndBlank("    ") # Unknown
     */
    public static String replaceNullAndBlank(String str) {
        return (str == null || "".equals(TalendString.talendTrim(str,' ',0))) ? "Unknown" : TalendString.talendTrim(str,' ',0);
    }
    
    public static String replaceNullAndBlank(Integer i) {
        return (i == null ) ? "Unknown" : i.toString();
    }    
    /**
     * replaceNullAndBlankCoalesce: returns "Unknown" if the coalesced string is either null or the trimmed string = ""
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("str") input: The string to be handled.
     * {param} string("str2") input: The second string to be handled.
     * 
     * {example} replaceNullAndBlankCoalesce("    ", "") # Unknown
     */    
    public static String replaceNullAndBlankCoalesce(String str, String str2) {
        return (str == null || "".equals(TalendString.talendTrim(str,' ',0)) || "Unknown".equals(TalendString.talendTrim(str,' ',0))) ? 
        	(str2 == null || "".equals(TalendString.talendTrim(str2,' ',0))) ?
        	"Unknown" : TalendString.talendTrim(str2,' ',0) : TalendString.talendTrim(str,' ',0);
    }
    
    /**
     * transformS21dateToKey: transforms System 21 dates (cyyMMdd) to date key (yyyyMMdd)
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} float("S21Date") input: The date to transform.
     * 
     * {example} transformS21dateToKey(1160104) # 20160104
     */
    public static int transformS21dateToKey(Float S21Date) {
        return (S21Date == null || S21Date == 0) ? 99990101 : (int) Math.round(S21Date) + 19000000;
    }    
    
    /**
     * transformDateToKey: transforms dates to date key (yyyyMMdd)
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} float("dateToTransform") input: The date to transform.
     * 
     * {example} transformDateToKey('2016-03-02') # 20160302
     */
    public static int transformDateToKey(Date dateToTransform) {
        return (S21Date == null || S21Date == 0) ? 99990101 : (int) Math.round(S21Date) + 19000000;
    }      
}
